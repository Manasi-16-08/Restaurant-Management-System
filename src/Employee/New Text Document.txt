 // Source code is unavailable, and was generated by the Fernflower decompiler.
package Employee;

import Login.LoginPage;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Iterator;
import java.util.Stack;

public class EmployeeList extends ExceptionClass {
   public static Stack<Employee> employeeList = new Stack();

   public void addEmployee(Employee var1) {
      try {
         Iterator var2 = employeeList.iterator();

         while(var2.hasNext()) {
            Employee var3 = (Employee)var2.next();
            if (var1.getID() == var3.getID()) {
               throw new ExceptionClass("Employee with same 'ID' already added");
            }

            if (var1.getPhoneNumber().equals(var3.getPhoneNumber())) {
               throw new ExceptionClass("Employee with same 'phone number' already added");
            }

            if (var1.getEmail().equals(var3.getEmail())) {
               throw new ExceptionClass("Employee with same 'email' already added");
            }
         }

         employeeList.push(var1);
      } catch (ExceptionClass var4) {
         var4.showMessage();
      }

   }

   public void removeEmployee(Employee var1) {
      employeeList.remove(var1);
      LoginPage.remove(var1.getID());
   }

   public void updateEmployee(Employee var1, Employee var2) {
      try {
         int var3 = employeeList.size() - employeeList.search(var1);
         if (var3 < 0 || var3 >= employeeList.size()) {
            throw new ExceptionClass("Previous Employee Not Found");
         }

         employeeList.set(var3, var2);
      } catch (ExceptionClass var4) {
         var4.showMessage();
      }

   }

   public Employee searchEmployeeByID(int var1) {
      try {
         Iterator var2 = employeeList.iterator();

         Employee var3;
         do {
            if (!var2.hasNext()) {
               throw new ExceptionClass("Employee Not Found");
            }

            var3 = (Employee)var2.next();
         } while(var3.getID() != var1);

         return var3;
      } catch (ExceptionClass var4) {
         var4.showMessage();
         return null;
      }
   }

   public Employee getEmployee(int var1) {
      try {
         if (var1 < employeeList.size()) {
            return (Employee)employeeList.get(var1);
         } else {
            throw new ExceptionClass("Index Out Of Bound");
         }
      } catch (ExceptionClass var3) {
         var3.showMessage();
         return null;
      }
   }

   public void getDataFromFile() {
      String var1 = "C:/Users/gurki/OneDrive/Desktop/Java Project/src/Employee/employee.txt";
      File var2 = new File(var1);

      try {
         BufferedReader var3 = new BufferedReader(new FileReader(var2));

         String var4;
         while((var4 = var3.readLine()) != null) {
            String[] var5 = var4.split(" , ");
            if (var5[0].compareTo("") != 0 && var5[2].compareTo("") != 0) {
               employeeList.add(new Employee(Integer.parseInt(var5[0]), var5[1], Integer.parseInt(var5[2]), var5[3], var5[4], var5[5], var5[6]));
            }
         }

         var3.close();
      } catch (IOException var6) {
         var6.printStackTrace();
      }

   }

   public void dataToFile() {
      String var1 = "C:/Users/gurki/OneDrive/Desktop/Java Project/src/Employee/employee.txt";
      File var2 = new File(var1);

      try {
         FileWriter var3 = new FileWriter(var2);
         Iterator var4 = employeeList.iterator();

         while(var4.hasNext()) {
            Employee var5 = (Employee)var4.next();
            int var10001 = var5.getID();
            var3.write(var10001 + " , " + var5.getName() + " , " + var5.getAge() + " , " + var5.getAddress() + " , " + var5.getPhoneNumber() + " , " + var5.getEmail() + " , " + var5.getDesignation() + "\n");
         }

         var3.close();
      } catch (IOException var6) {
         var6.printStackTrace();
      }

   }
}
